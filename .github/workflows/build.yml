name: Rust Build Workflow

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  msrv-check:
    name: Minimum Stable Rust Version Check
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: '1.70.0'
      - uses: Swatinem/rust-cache@v2
      - run: cargo fetch
      - name: cargo check
        run: cargo check --all-targets

  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: rustup component add rustfmt
      - name: check rustfmt
        run: cargo fmt -- --check --color always
      - run: rustup component add clippy
      - run: cargo fetch
      - name: cargo clippy
        run: cargo clippy --all-targets -- -D warnings

  build:
    name: Build and Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: '${{ matrix.target }}'
          override: true
      - name: Install MinGW-w64
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get update && sudo apt-get install -y mingw-w64
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: '--release --target ${{ matrix.target }}'
      - name: Archive and upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: '${{ matrix.target }}'
          path: 'target/${{ matrix.target }}/release/'